{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["GameBoard","props","className","oneoneColor","oneone","onetwoColor","onetwo","onethreeColor","onethree","onefourColor","onefour","twooneColor","twoone","twotwoColor","twotwo","twothreeColor","twothree","twofourColor","twofour","threeoneColor","threeone","threetwoColor","threetwo","threethreeColor","threethree","threefourColor","threefour","fouroneColor","fourone","fourtwoColor","fourtwo","fourthreeColor","fourthree","fourfourColor","fourfour","App","useState","game","changeGame","color","changeColor","updateColor","updatedColor","i","j","onClick","updatedGame","firstColumn","push","length","sameOrDiffArr","splice","secondColumn","thirdColumn","fourthColumn","firstRow","secondRow","thirdRow","fourthRow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a39cf547.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n\n  let [game, changeGame] = useState(\n    [\n    [2,2,2,4],\n    [0,4,4,2],\n    [0,8,0,2],\n    [2,8,4,2]]\n    );\n\n    let [color, changeColor] = useState(\n      [\n      [\"white\",\"white\",\"white\",\"white\"],\n      [\"white\",\"white\",\"white\",\"white\"],\n      [\"white\",\"white\",\"white\",\"white\"],\n      [\"white\",\"white\",\"white\",\"white\"]]\n    );\n\n  function up() {\n    let updatedGame = [...game];\n\n    //first column start\n    let firstColumn = [];\n    if(updatedGame[0][0]) firstColumn.push(updatedGame[0][0]);\n    if(updatedGame[1][0]) firstColumn.push(updatedGame[1][0]);\n    if(updatedGame[2][0]) firstColumn.push(updatedGame[2][0]);\n    if(updatedGame[3][0]) firstColumn.push(updatedGame[3][0]);\n\n    //when the number of elements of first column which is not 0 is four\n    if(firstColumn.length === 4) {\n      const sameOrDiffArr = [\n        firstColumn[0]===firstColumn[1],\n        firstColumn[1]===firstColumn[2],\n        firstColumn[2]===firstColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        firstColumn.splice(0, 2, firstColumn[0]+firstColumn[1]);\n        if(sameOrDiffArr[2]) {\n          firstColumn.splice(1, 2, firstColumn[1]+firstColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        firstColumn.splice(1, 2, firstColumn[1]+firstColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        firstColumn.splice(2, 2, firstColumn[2]+firstColumn[3]);\n      }\n    }\n\n    //when the number of elements of first column which is not 0 is three\n    else if(firstColumn.length === 3) {\n      const sameOrDiffArr = [\n        firstColumn[0]===firstColumn[1],\n        firstColumn[1]===firstColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        firstColumn.splice(0, 2, firstColumn[0]+firstColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        firstColumn.splice(1, 2, firstColumn[1]+firstColumn[2])\n      }\n  }\n\n    //when the number of elements of first column which is not 0 is two\n    else if(firstColumn.length === 2) {\n      if(firstColumn[0] === firstColumn[1]) {\n        firstColumn = [firstColumn[0]+firstColumn[1]];\n      }\n    }\n\n    if (firstColumn.length === 3) firstColumn.push(0);\n    if (firstColumn.length === 2) firstColumn.push(0, 0);\n    if (firstColumn.length === 1) firstColumn.push(0, 0, 0);\n    if (firstColumn.length === 0) firstColumn.push(0, 0, 0, 0);\n\n    [updatedGame[0][0], updatedGame[1][0], updatedGame[2][0], updatedGame[3][0]] = firstColumn;\n    //first column end\n    //second column start\n    let secondColumn = [];\n    if(updatedGame[0][1]) secondColumn.push(updatedGame[0][1]);\n    if(updatedGame[1][1]) secondColumn.push(updatedGame[1][1]);\n    if(updatedGame[2][1]) secondColumn.push(updatedGame[2][1]);\n    if(updatedGame[3][1]) secondColumn.push(updatedGame[3][1]);\n\n    //when the number of elements of second column which is not 0 is four\n    if(secondColumn.length === 4) {\n      const sameOrDiffArr = [\n        secondColumn[0]===secondColumn[1],\n        secondColumn[1]===secondColumn[2],\n        secondColumn[2]===secondColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        secondColumn.splice(0, 2, secondColumn[0]+secondColumn[1]);\n        if(sameOrDiffArr[2]) {\n          secondColumn.splice(1, 2, secondColumn[1]+secondColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        secondColumn.splice(1, 2, secondColumn[1]+secondColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        secondColumn.splice(2, 2, secondColumn[2]+secondColumn[3]);\n      }\n    }\n\n    //when the number of elements of second column which is not 0 is three\n    else if(secondColumn.length === 3) {\n      const sameOrDiffArr = [\n        secondColumn[0]===secondColumn[1],\n        secondColumn[1]===secondColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        secondColumn.splice(0, 2, secondColumn[0]+secondColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        secondColumn.splice(1, 2, secondColumn[1]+secondColumn[2])\n      }\n  }\n\n    //when the number of elements of second column which is not 0 is two\n    else if(secondColumn.length === 2) {\n      if(secondColumn[0] === secondColumn[1]) {\n        secondColumn = [secondColumn[0]+secondColumn[1]];\n      }\n    }\n\n    if (secondColumn.length === 3) secondColumn.push(0);\n    if (secondColumn.length === 2) secondColumn.push(0, 0);\n    if (secondColumn.length === 1) secondColumn.push(0, 0, 0);\n    if (secondColumn.length === 0) secondColumn.push(0, 0, 0, 0);\n\n    [updatedGame[0][1], updatedGame[1][1], updatedGame[2][1], updatedGame[3][1]] = secondColumn;\n    //second column end\n    //third column start\n    let thirdColumn = [];\n    if(updatedGame[0][2]) thirdColumn.push(updatedGame[0][2]);\n    if(updatedGame[1][2]) thirdColumn.push(updatedGame[1][2]);\n    if(updatedGame[2][2]) thirdColumn.push(updatedGame[2][2]);\n    if(updatedGame[3][2]) thirdColumn.push(updatedGame[3][2]);\n\n    //when the number of elements of third column which is not 0 is four\n    if(thirdColumn.length === 4) {\n      const sameOrDiffArr = [\n        thirdColumn[0]===thirdColumn[1],\n        thirdColumn[1]===thirdColumn[2],\n        thirdColumn[2]===thirdColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        thirdColumn.splice(0, 2, thirdColumn[0]+thirdColumn[1]);\n        if(sameOrDiffArr[2]) {\n          thirdColumn.splice(1, 2, thirdColumn[1]+thirdColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        thirdColumn.splice(1, 2, thirdColumn[1]+thirdColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        thirdColumn.splice(2, 2, thirdColumn[2]+thirdColumn[3]);\n      }\n    }\n\n    //when the number of elements of third column which is not 0 is three\n    else if(thirdColumn.length === 3) {\n      const sameOrDiffArr = [\n        thirdColumn[0]===thirdColumn[1],\n        thirdColumn[1]===thirdColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        thirdColumn.splice(0, 2, thirdColumn[0]+thirdColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        thirdColumn.splice(1, 2, thirdColumn[1]+thirdColumn[2])\n      }\n  }\n\n    //when the number of elements of third column which is not 0 is two\n    else if(thirdColumn.length === 2) {\n      if(thirdColumn[0] === thirdColumn[1]) {\n        thirdColumn = [thirdColumn[0]+thirdColumn[1]];\n      }\n    }\n\n    if (thirdColumn.length === 3) thirdColumn.push(0);\n    if (thirdColumn.length === 2) thirdColumn.push(0, 0);\n    if (thirdColumn.length === 1) thirdColumn.push(0, 0, 0);\n    if (thirdColumn.length === 0) thirdColumn.push(0, 0, 0, 0);\n\n    [updatedGame[0][2], updatedGame[1][2], updatedGame[2][2], updatedGame[3][2]] = thirdColumn;\n    //third column end\n    //fourth column start\n    let fourthColumn = [];\n    if(updatedGame[0][3]) fourthColumn.push(updatedGame[0][3]);\n    if(updatedGame[1][3]) fourthColumn.push(updatedGame[1][3]);\n    if(updatedGame[2][3]) fourthColumn.push(updatedGame[2][3]);\n    if(updatedGame[3][3]) fourthColumn.push(updatedGame[3][3]);\n\n    //when the number of elements of fourth column which is not 0 is four\n    if(fourthColumn.length === 4) {\n      const sameOrDiffArr = [\n        fourthColumn[0]===fourthColumn[1],\n        fourthColumn[1]===fourthColumn[2],\n        fourthColumn[2]===fourthColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        fourthColumn.splice(0, 2, fourthColumn[0]+fourthColumn[1]);\n        if(sameOrDiffArr[2]) {\n          fourthColumn.splice(1, 2, fourthColumn[1]+fourthColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        fourthColumn.splice(1, 2, fourthColumn[1]+fourthColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        fourthColumn.splice(2, 2, fourthColumn[2]+fourthColumn[3]);\n      }\n    }\n\n    //when the number of elements of fourth column which is not 0 is three\n    else if(fourthColumn.length === 3) {\n      const sameOrDiffArr = [\n        fourthColumn[0]===fourthColumn[1],\n        fourthColumn[1]===fourthColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        fourthColumn.splice(0, 2, fourthColumn[0]+fourthColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        fourthColumn.splice(1, 2, fourthColumn[1]+fourthColumn[2])\n      }\n  }\n\n    //when the number of elements of fourth column which is not 0 is two\n    else if(fourthColumn.length === 2) {\n      if(fourthColumn[0] === fourthColumn[1]) {\n        fourthColumn = [fourthColumn[0]+fourthColumn[1]];\n      }\n    }\n\n    if (fourthColumn.length === 3) fourthColumn.push(0);\n    if (fourthColumn.length === 2) fourthColumn.push(0, 0);\n    if (fourthColumn.length === 1) fourthColumn.push(0, 0, 0);\n    if (fourthColumn.length === 0) fourthColumn.push(0, 0, 0, 0);\n\n    [updatedGame[0][3], updatedGame[1][3], updatedGame[2][3], updatedGame[3][3]] = fourthColumn;\n    //fourth column end\n    changeGame(updatedGame);\n    updateColor();\n  }\n\n  function left() {\n    let updatedGame = [...game];\n\n    //first row start\n    let firstRow = [];\n    if(updatedGame[0][0]) firstRow.push(updatedGame[0][0]);\n    if(updatedGame[0][1]) firstRow.push(updatedGame[0][1]);\n    if(updatedGame[0][2]) firstRow.push(updatedGame[0][2]);\n    if(updatedGame[0][3]) firstRow.push(updatedGame[0][3]);\n\n    //when the number of elements of first row which is not 0 is four\n    if(firstRow.length === 4) {\n      const sameOrDiffArr = [\n        firstRow[0]===firstRow[1],\n        firstRow[1]===firstRow[2],\n        firstRow[2]===firstRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        firstRow.splice(0, 2, firstRow[0]+firstRow[1]);\n        if(sameOrDiffArr[2]) {\n          firstRow.splice(1, 2, firstRow[1]+firstRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        firstRow.splice(1, 2, firstRow[1]+firstRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        firstRow.splice(2, 2, firstRow[2]+firstRow[3]);\n      }\n    }\n\n    //when the number of elements of first row which is not 0 is three\n    else if(firstRow.length === 3) {\n      const sameOrDiffArr = [\n        firstRow[0]===firstRow[1],\n        firstRow[1]===firstRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        firstRow.splice(0, 2, firstRow[0]+firstRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        firstRow.splice(1, 2, firstRow[1]+firstRow[2])\n      }\n  }\n\n    //when the number of elements of first row which is not 0 is two\n    else if(firstRow.length === 2) {\n      if(firstRow[0] === firstRow[1]) {\n        firstRow = [firstRow[0]+firstRow[1]];\n      }\n    }\n\n    if (firstRow.length === 3) firstRow.push(0);\n    if (firstRow.length === 2) firstRow.push(0, 0);\n    if (firstRow.length === 1) firstRow.push(0, 0, 0);\n    if (firstRow.length === 0) firstRow.push(0, 0, 0, 0);\n\n    [updatedGame[0][0], updatedGame[0][1], updatedGame[0][2], updatedGame[0][3]] = firstRow;\n    //first row end\n    //second row start\n    let secondRow = [];\n    if(updatedGame[1][0]) secondRow.push(updatedGame[1][0]);\n    if(updatedGame[1][1]) secondRow.push(updatedGame[1][1]);\n    if(updatedGame[1][2]) secondRow.push(updatedGame[1][2]);\n    if(updatedGame[1][3]) secondRow.push(updatedGame[1][3]);\n\n    //when the number of elements of second row which is not 0 is four\n    if(secondRow.length === 4) {\n      const sameOrDiffArr = [\n        secondRow[0]===secondRow[1],\n        secondRow[1]===secondRow[2],\n        secondRow[2]===secondRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        secondRow.splice(0, 2, secondRow[0]+secondRow[1]);\n        if(sameOrDiffArr[2]) {\n          secondRow.splice(1, 2, secondRow[1]+secondRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        secondRow.splice(1, 2, secondRow[1]+secondRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        secondRow.splice(2, 2, secondRow[2]+secondRow[3]);\n      }\n    }\n\n    //when the number of elements of second row which is not 0 is three\n    else if(secondRow.length === 3) {\n      const sameOrDiffArr = [\n        secondRow[0]===secondRow[1],\n        secondRow[1]===secondRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        secondRow.splice(0, 2, secondRow[0]+secondRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        secondRow.splice(1, 2, secondRow[1]+secondRow[2])\n      }\n  }\n\n    //when the number of elements of second row which is not 0 is two\n    else if(secondRow.length === 2) {\n      if(secondRow[0] === secondRow[1]) {\n        secondRow = [secondRow[0]+secondRow[1]];\n      }\n    }\n\n    if (secondRow.length === 3) secondRow.push(0);\n    if (secondRow.length === 2) secondRow.push(0, 0);\n    if (secondRow.length === 1) secondRow.push(0, 0, 0);\n    if (secondRow.length === 0) secondRow.push(0, 0, 0, 0);\n\n    [updatedGame[1][0], updatedGame[1][1], updatedGame[1][2], updatedGame[1][3]] = secondRow;\n    //second Row end\n    //third Row start\n    let thirdRow = [];\n    if(updatedGame[2][0]) thirdRow.push(updatedGame[2][0]);\n    if(updatedGame[2][1]) thirdRow.push(updatedGame[2][1]);\n    if(updatedGame[2][2]) thirdRow.push(updatedGame[2][2]);\n    if(updatedGame[2][3]) thirdRow.push(updatedGame[2][3]);\n\n    //when the number of elements of third row which is not 0 is four\n    if(thirdRow.length === 4) {\n      const sameOrDiffArr = [\n        thirdRow[0]===thirdRow[1],\n        thirdRow[1]===thirdRow[2],\n        thirdRow[2]===thirdRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        thirdRow.splice(0, 2, thirdRow[0]+thirdRow[1]);\n        if(sameOrDiffArr[2]) {\n          thirdRow.splice(1, 2, thirdRow[1]+thirdRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        thirdRow.splice(1, 2, thirdRow[1]+thirdRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        thirdRow.splice(2, 2, thirdRow[2]+thirdRow[3]);\n      }\n    }\n\n    //when the number of elements of third row which is not 0 is three\n    else if(thirdRow.length === 3) {\n      const sameOrDiffArr = [\n        thirdRow[0]===thirdRow[1],\n        thirdRow[1]===thirdRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        thirdRow.splice(0, 2, thirdRow[0]+thirdRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        thirdRow.splice(1, 2, thirdRow[1]+thirdRow[2])\n      }\n  }\n\n    //when the number of elements of third row which is not 0 is two\n    else if(thirdRow.length === 2) {\n      if(thirdRow[0] === thirdRow[1]) {\n        thirdRow = [thirdRow[0]+thirdRow[1]];\n      }\n    }\n\n    if (thirdRow.length === 3) thirdRow.push(0);\n    if (thirdRow.length === 2) thirdRow.push(0, 0);\n    if (thirdRow.length === 1) thirdRow.push(0, 0, 0);\n    if (thirdRow.length === 0) thirdRow.push(0, 0, 0, 0);\n\n    [updatedGame[2][0], updatedGame[2][1], updatedGame[2][2], updatedGame[2][3]] = thirdRow;\n    //third row end\n    //fourth row start\n    let fourthRow = [];\n    if(updatedGame[3][0]) fourthRow.push(updatedGame[3][0]);\n    if(updatedGame[3][1]) fourthRow.push(updatedGame[3][1]);\n    if(updatedGame[3][2]) fourthRow.push(updatedGame[3][2]);\n    if(updatedGame[3][3]) fourthRow.push(updatedGame[3][3]);\n\n    //when the number of elements of fourth row which is not 0 is four\n    if(fourthRow.length === 4) {\n      const sameOrDiffArr = [\n        fourthRow[0]===fourthRow[1],\n        fourthRow[1]===fourthRow[2],\n        fourthRow[2]===fourthRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        fourthRow.splice(0, 2, fourthRow[0]+fourthRow[1]);\n        if(sameOrDiffArr[2]) {\n          fourthRow.splice(1, 2, fourthRow[1]+fourthRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        fourthRow.splice(1, 2, fourthRow[1]+fourthRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        fourthRow.splice(2, 2, fourthRow[2]+fourthRow[3]);\n      }\n    }\n\n    //when the number of elements of fourth row which is not 0 is three\n    else if(fourthRow.length === 3) {\n      const sameOrDiffArr = [\n        fourthRow[0]===fourthRow[1],\n        fourthRow[1]===fourthRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        fourthRow.splice(0, 2, fourthRow[0]+fourthRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        fourthRow.splice(1, 2, fourthRow[1]+fourthRow[2])\n      }\n  }\n\n    //when the number of elements of fourth row which is not 0 is two\n    else if(fourthRow.length === 2) {\n      if(fourthRow[0] === fourthRow[1]) {\n        fourthRow = [fourthRow[0]+fourthRow[1]];\n      }\n    }\n\n    if (fourthRow.length === 3) fourthRow.push(0);\n    if (fourthRow.length === 2) fourthRow.push(0, 0);\n    if (fourthRow.length === 1) fourthRow.push(0, 0, 0);\n    if (fourthRow.length === 0) fourthRow.push(0, 0, 0, 0);\n\n    [updatedGame[3][0], updatedGame[3][1], updatedGame[3][2], updatedGame[3][3]] = fourthRow;\n    //fourth row end\n    changeGame(updatedGame);\n    updateColor();\n  }\n\n  function right() {\n    let updatedGame = [...game];\n\n    //first row start\n    let firstRow = [];\n    if(updatedGame[0][3]) firstRow.push(updatedGame[0][3]);\n    if(updatedGame[0][2]) firstRow.push(updatedGame[0][2]);\n    if(updatedGame[0][1]) firstRow.push(updatedGame[0][1]);\n    if(updatedGame[0][0]) firstRow.push(updatedGame[0][0]);\n\n    //when the number of elements of first row which is not 0 is four\n    if(firstRow.length === 4) {\n      const sameOrDiffArr = [\n        firstRow[0]===firstRow[1],\n        firstRow[1]===firstRow[2],\n        firstRow[2]===firstRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        firstRow.splice(0, 2, firstRow[0]+firstRow[1]);\n        if(sameOrDiffArr[2]) {\n          firstRow.splice(1, 2, firstRow[1]+firstRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        firstRow.splice(1, 2, firstRow[1]+firstRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        firstRow.splice(2, 2, firstRow[2]+firstRow[3]);\n      }\n    }\n\n    //when the number of elements of first row which is not 0 is three\n    else if(firstRow.length === 3) {\n      const sameOrDiffArr = [\n        firstRow[0]===firstRow[1],\n        firstRow[1]===firstRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        firstRow.splice(0, 2, firstRow[0]+firstRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        firstRow.splice(1, 2, firstRow[1]+firstRow[2])\n      }\n  }\n\n    //when the number of elements of first row which is not 0 is two\n    else if(firstRow.length === 2) {\n      if(firstRow[0] === firstRow[1]) {\n        firstRow = [firstRow[0]+firstRow[1]];\n      }\n    }\n\n    if (firstRow.length === 3) firstRow.push(0);\n    if (firstRow.length === 2) firstRow.push(0, 0);\n    if (firstRow.length === 1) firstRow.push(0, 0, 0);\n    if (firstRow.length === 0) firstRow.push(0, 0, 0, 0);\n\n    [updatedGame[0][3], updatedGame[0][2], updatedGame[0][1], updatedGame[0][0]] = firstRow;\n    //first row end\n    //second row start\n    let secondRow = [];\n    if(updatedGame[1][3]) secondRow.push(updatedGame[1][3]);\n    if(updatedGame[1][2]) secondRow.push(updatedGame[1][2]);\n    if(updatedGame[1][1]) secondRow.push(updatedGame[1][1]);\n    if(updatedGame[1][0]) secondRow.push(updatedGame[1][0]);\n\n    //when the number of elements of second row which is not 0 is four\n    if(secondRow.length === 4) {\n      const sameOrDiffArr = [\n        secondRow[0]===secondRow[1],\n        secondRow[1]===secondRow[2],\n        secondRow[2]===secondRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        secondRow.splice(0, 2, secondRow[0]+secondRow[1]);\n        if(sameOrDiffArr[2]) {\n          secondRow.splice(1, 2, secondRow[1]+secondRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        secondRow.splice(1, 2, secondRow[1]+secondRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        secondRow.splice(2, 2, secondRow[2]+secondRow[3]);\n      }\n    }\n\n    //when the number of elements of second row which is not 0 is three\n    else if(secondRow.length === 3) {\n      const sameOrDiffArr = [\n        secondRow[0]===secondRow[1],\n        secondRow[1]===secondRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        secondRow.splice(0, 2, secondRow[0]+secondRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        secondRow.splice(1, 2, secondRow[1]+secondRow[2])\n      }\n  }\n\n    //when the number of elements of second row which is not 0 is two\n    else if(secondRow.length === 2) {\n      if(secondRow[0] === secondRow[1]) {\n        secondRow = [secondRow[0]+secondRow[1]];\n      }\n    }\n\n    if (secondRow.length === 3) secondRow.push(0);\n    if (secondRow.length === 2) secondRow.push(0, 0);\n    if (secondRow.length === 1) secondRow.push(0, 0, 0);\n    if (secondRow.length === 0) secondRow.push(0, 0, 0, 0);\n\n    [updatedGame[1][3], updatedGame[1][2], updatedGame[1][1], updatedGame[1][0]] = secondRow;\n    //second Row end\n    //third Row start\n    let thirdRow = [];\n    if(updatedGame[2][3]) thirdRow.push(updatedGame[2][3]);\n    if(updatedGame[2][2]) thirdRow.push(updatedGame[2][2]);\n    if(updatedGame[2][1]) thirdRow.push(updatedGame[2][1]);\n    if(updatedGame[2][0]) thirdRow.push(updatedGame[2][0]);\n\n    //when the number of elements of third row which is not 0 is four\n    if(thirdRow.length === 4) {\n      const sameOrDiffArr = [\n        thirdRow[0]===thirdRow[1],\n        thirdRow[1]===thirdRow[2],\n        thirdRow[2]===thirdRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        thirdRow.splice(0, 2, thirdRow[0]+thirdRow[1]);\n        if(sameOrDiffArr[2]) {\n          thirdRow.splice(1, 2, thirdRow[1]+thirdRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        thirdRow.splice(1, 2, thirdRow[1]+thirdRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        thirdRow.splice(2, 2, thirdRow[2]+thirdRow[3]);\n      }\n    }\n\n    //when the number of elements of third row which is not 0 is three\n    else if(thirdRow.length === 3) {\n      const sameOrDiffArr = [\n        thirdRow[0]===thirdRow[1],\n        thirdRow[1]===thirdRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        thirdRow.splice(0, 2, thirdRow[0]+thirdRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        thirdRow.splice(1, 2, thirdRow[1]+thirdRow[2])\n      }\n  }\n\n    //when the number of elements of third row which is not 0 is two\n    else if(thirdRow.length === 2) {\n      if(thirdRow[0] === thirdRow[1]) {\n        thirdRow = [thirdRow[0]+thirdRow[1]];\n      }\n    }\n\n    if (thirdRow.length === 3) thirdRow.push(0);\n    if (thirdRow.length === 2) thirdRow.push(0, 0);\n    if (thirdRow.length === 1) thirdRow.push(0, 0, 0);\n    if (thirdRow.length === 0) thirdRow.push(0, 0, 0, 0);\n\n    [updatedGame[2][3], updatedGame[2][2], updatedGame[2][1], updatedGame[2][0]] = thirdRow;\n    //third row end\n    //fourth row start\n    let fourthRow = [];\n    if(updatedGame[3][3]) fourthRow.push(updatedGame[3][3]);\n    if(updatedGame[3][2]) fourthRow.push(updatedGame[3][2]);\n    if(updatedGame[3][1]) fourthRow.push(updatedGame[3][1]);\n    if(updatedGame[3][0]) fourthRow.push(updatedGame[3][0]);\n\n    //when the number of elements of fourth row which is not 0 is four\n    if(fourthRow.length === 4) {\n      const sameOrDiffArr = [\n        fourthRow[0]===fourthRow[1],\n        fourthRow[1]===fourthRow[2],\n        fourthRow[2]===fourthRow[3]]\n\n      if(sameOrDiffArr[0]) {\n        fourthRow.splice(0, 2, fourthRow[0]+fourthRow[1]);\n        if(sameOrDiffArr[2]) {\n          fourthRow.splice(1, 2, fourthRow[1]+fourthRow[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        fourthRow.splice(1, 2, fourthRow[1]+fourthRow[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        fourthRow.splice(2, 2, fourthRow[2]+fourthRow[3]);\n      }\n    }\n\n    //when the number of elements of fourth row which is not 0 is three\n    else if(fourthRow.length === 3) {\n      const sameOrDiffArr = [\n        fourthRow[0]===fourthRow[1],\n        fourthRow[1]===fourthRow[2]]\n\n      if(sameOrDiffArr[0]) {\n        fourthRow.splice(0, 2, fourthRow[0]+fourthRow[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        fourthRow.splice(1, 2, fourthRow[1]+fourthRow[2])\n      }\n  }\n\n    //when the number of elements of fourth row which is not 0 is two\n    else if(fourthRow.length === 2) {\n      if(fourthRow[0] === fourthRow[1]) {\n        fourthRow = [fourthRow[0]+fourthRow[1]];\n      }\n    }\n\n    if (fourthRow.length === 3) fourthRow.push(0);\n    if (fourthRow.length === 2) fourthRow.push(0, 0);\n    if (fourthRow.length === 1) fourthRow.push(0, 0, 0);\n    if (fourthRow.length === 0) fourthRow.push(0, 0, 0, 0);\n\n    [updatedGame[3][3], updatedGame[3][2], updatedGame[3][1], updatedGame[3][0]] = fourthRow;\n    //fourth row end\n    changeGame(updatedGame);\n    updateColor();\n  }\n\n  function down() {\n    let updatedGame = [...game];\n\n    //first column start\n    let firstColumn = [];\n    if(updatedGame[3][0]) firstColumn.push(updatedGame[3][0]);\n    if(updatedGame[2][0]) firstColumn.push(updatedGame[2][0]);\n    if(updatedGame[1][0]) firstColumn.push(updatedGame[1][0]);\n    if(updatedGame[0][0]) firstColumn.push(updatedGame[0][0]);\n\n    //when the number of elements of first column which is not 0 is four\n    if(firstColumn.length === 4) {\n      const sameOrDiffArr = [\n        firstColumn[0]===firstColumn[1],\n        firstColumn[1]===firstColumn[2],\n        firstColumn[2]===firstColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        firstColumn.splice(0, 2, firstColumn[0]+firstColumn[1]);\n        if(sameOrDiffArr[2]) {\n          firstColumn.splice(1, 2, firstColumn[1]+firstColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        firstColumn.splice(1, 2, firstColumn[1]+firstColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        firstColumn.splice(2, 2, firstColumn[2]+firstColumn[3]);\n      }\n    }\n\n    //when the number of elements of first column which is not 0 is three\n    else if(firstColumn.length === 3) {\n      const sameOrDiffArr = [\n        firstColumn[0]===firstColumn[1],\n        firstColumn[1]===firstColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        firstColumn.splice(0, 2, firstColumn[0]+firstColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        firstColumn.splice(1, 2, firstColumn[1]+firstColumn[2])\n      }\n  }\n\n    //when the number of elements of first column which is not 0 is two\n    else if(firstColumn.length === 2) {\n      if(firstColumn[0] === firstColumn[1]) {\n        firstColumn = [firstColumn[0]+firstColumn[1]];\n      }\n    }\n\n    if (firstColumn.length === 3) firstColumn.push(0);\n    if (firstColumn.length === 2) firstColumn.push(0, 0);\n    if (firstColumn.length === 1) firstColumn.push(0, 0, 0);\n    if (firstColumn.length === 0) firstColumn.push(0, 0, 0, 0);\n\n    [updatedGame[3][0], updatedGame[2][0], updatedGame[1][0], updatedGame[0][0]] = firstColumn;\n    //first column end\n    //second column start\n    let secondColumn = [];\n    if(updatedGame[3][1]) secondColumn.push(updatedGame[3][1]);\n    if(updatedGame[2][1]) secondColumn.push(updatedGame[2][1]);\n    if(updatedGame[1][1]) secondColumn.push(updatedGame[1][1]);\n    if(updatedGame[0][1]) secondColumn.push(updatedGame[0][1]);\n\n    //when the number of elements of second column which is not 0 is four\n    if(secondColumn.length === 4) {\n      const sameOrDiffArr = [\n        secondColumn[0]===secondColumn[1],\n        secondColumn[1]===secondColumn[2],\n        secondColumn[2]===secondColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        secondColumn.splice(0, 2, secondColumn[0]+secondColumn[1]);\n        if(sameOrDiffArr[2]) {\n          secondColumn.splice(1, 2, secondColumn[1]+secondColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        secondColumn.splice(1, 2, secondColumn[1]+secondColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        secondColumn.splice(2, 2, secondColumn[2]+secondColumn[3]);\n      }\n    }\n\n    //when the number of elements of second column which is not 0 is three\n    else if(secondColumn.length === 3) {\n      const sameOrDiffArr = [\n        secondColumn[0]===secondColumn[1],\n        secondColumn[1]===secondColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        secondColumn.splice(0, 2, secondColumn[0]+secondColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        secondColumn.splice(1, 2, secondColumn[1]+secondColumn[2])\n      }\n  }\n\n    //when the number of elements of second column which is not 0 is two\n    else if(secondColumn.length === 2) {\n      if(secondColumn[0] === secondColumn[1]) {\n        secondColumn = [secondColumn[0]+secondColumn[1]];\n      }\n    }\n\n    if (secondColumn.length === 3) secondColumn.push(0);\n    if (secondColumn.length === 2) secondColumn.push(0, 0);\n    if (secondColumn.length === 1) secondColumn.push(0, 0, 0);\n    if (secondColumn.length === 0) secondColumn.push(0, 0, 0, 0);\n\n    [updatedGame[3][1], updatedGame[2][1], updatedGame[1][1], updatedGame[0][1]] = secondColumn;\n    //second column end\n    //third column start\n    let thirdColumn = [];\n    if(updatedGame[3][2]) thirdColumn.push(updatedGame[3][2]);\n    if(updatedGame[2][2]) thirdColumn.push(updatedGame[2][2]);\n    if(updatedGame[1][2]) thirdColumn.push(updatedGame[1][2]);\n    if(updatedGame[0][2]) thirdColumn.push(updatedGame[0][2]);\n\n    //when the number of elements of third column which is not 0 is four\n    if(thirdColumn.length === 4) {\n      const sameOrDiffArr = [\n        thirdColumn[0]===thirdColumn[1],\n        thirdColumn[1]===thirdColumn[2],\n        thirdColumn[2]===thirdColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        thirdColumn.splice(0, 2, thirdColumn[0]+thirdColumn[1]);\n        if(sameOrDiffArr[2]) {\n          thirdColumn.splice(1, 2, thirdColumn[1]+thirdColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        thirdColumn.splice(1, 2, thirdColumn[1]+thirdColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        thirdColumn.splice(2, 2, thirdColumn[2]+thirdColumn[3]);\n      }\n    }\n\n    //when the number of elements of third column which is not 0 is three\n    else if(thirdColumn.length === 3) {\n      const sameOrDiffArr = [\n        thirdColumn[0]===thirdColumn[1],\n        thirdColumn[1]===thirdColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        thirdColumn.splice(0, 2, thirdColumn[0]+thirdColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        thirdColumn.splice(1, 2, thirdColumn[1]+thirdColumn[2])\n      }\n  }\n\n    //when the number of elements of third column which is not 0 is two\n    else if(thirdColumn.length === 2) {\n      if(thirdColumn[0] === thirdColumn[1]) {\n        thirdColumn = [thirdColumn[0]+thirdColumn[1]];\n      }\n    }\n\n    if (thirdColumn.length === 3) thirdColumn.push(0);\n    if (thirdColumn.length === 2) thirdColumn.push(0, 0);\n    if (thirdColumn.length === 1) thirdColumn.push(0, 0, 0);\n    if (thirdColumn.length === 0) thirdColumn.push(0, 0, 0, 0);\n\n    [updatedGame[3][2], updatedGame[2][2], updatedGame[1][2], updatedGame[0][2]] = thirdColumn;\n    //third column end\n    //fourth column start\n    let fourthColumn = [];\n    if(updatedGame[3][3]) fourthColumn.push(updatedGame[3][3]);\n    if(updatedGame[2][3]) fourthColumn.push(updatedGame[2][3]);\n    if(updatedGame[1][3]) fourthColumn.push(updatedGame[1][3]);\n    if(updatedGame[0][3]) fourthColumn.push(updatedGame[0][3]);\n\n    //when the number of elements of fourth column which is not 0 is four\n    if(fourthColumn.length === 4) {\n      const sameOrDiffArr = [\n        fourthColumn[0]===fourthColumn[1],\n        fourthColumn[1]===fourthColumn[2],\n        fourthColumn[2]===fourthColumn[3]]\n\n      if(sameOrDiffArr[0]) {\n        fourthColumn.splice(0, 2, fourthColumn[0]+fourthColumn[1]);\n        if(sameOrDiffArr[2]) {\n          fourthColumn.splice(1, 2, fourthColumn[1]+fourthColumn[2]);\n        }\n      }\n\n      else if (sameOrDiffArr[1]) {\n        fourthColumn.splice(1, 2, fourthColumn[1]+fourthColumn[2]);\n      }\n\n      else if (sameOrDiffArr[2]) {\n        fourthColumn.splice(2, 2, fourthColumn[2]+fourthColumn[3]);\n      }\n    }\n\n    //when the number of elements of fourth column which is not 0 is three\n    else if(fourthColumn.length === 3) {\n      const sameOrDiffArr = [\n        fourthColumn[0]===fourthColumn[1],\n        fourthColumn[1]===fourthColumn[2]]\n\n      if(sameOrDiffArr[0]) {\n        fourthColumn.splice(0, 2, fourthColumn[0]+fourthColumn[1]);\n      }\n\n      else if(sameOrDiffArr[1]) {\n        fourthColumn.splice(1, 2, fourthColumn[1]+fourthColumn[2])\n      }\n  }\n\n    //when the number of elements of fourth column which is not 0 is two\n    else if(fourthColumn.length === 2) {\n      if(fourthColumn[0] === fourthColumn[1]) {\n        fourthColumn = [fourthColumn[0]+fourthColumn[1]];\n      }\n    }\n\n    if (fourthColumn.length === 3) fourthColumn.push(0);\n    if (fourthColumn.length === 2) fourthColumn.push(0, 0);\n    if (fourthColumn.length === 1) fourthColumn.push(0, 0, 0);\n    if (fourthColumn.length === 0) fourthColumn.push(0, 0, 0, 0);\n\n    [updatedGame[3][3], updatedGame[2][3], updatedGame[1][3], updatedGame[0][3]] = fourthColumn;\n    //fourth column end\n    changeGame(updatedGame);\n    updateColor();\n  }\n\n  function updateColor() {\n    let updatedColor = [...color];\n\n    for (let i=0; i < 4; i++) {\n      for (let j=0; j<4; j++) {\n        if(game[i][j] === 0) updatedColor[i][j] = \"white\";\n        if(game[i][j] === 2) updatedColor[i][j] = \"gray\";\n        if(game[i][j] === 4) updatedColor[i][j] = \"orange\";\n        if(game[i][j] === 8) updatedColor[i][j] = \"skyblue\";\n        if(game[i][j] === 16) updatedColor[i][j] = \"green\";\n        \n      }\n    }\n    changeColor(updatedColor);\n  }\n\n  return (\n    <div className=\"App\">\n      <GameBoard \n      oneone = {game[0][0]}\n      onetwo = {game[0][1]}\n      onethree = {game[0][2]}\n      onefour = {game[0][3]}\n      twoone = {game[1][0]}\n      twotwo = {game[1][1]}\n      twothree = {game[1][2]}\n      twofour = {game[1][3]}\n      threeone = {game[2][0]}\n      threetwo = {game[2][1]}\n      threethree = {game[2][2]}\n      threefour = {game[2][3]}\n      fourone = {game[3][0]}\n      fourtwo = {game[3][1]}\n      fourthree = {game[3][2]}\n      fourfour = {game[3][3]}\n      oneoneColor = {color[0][0]}\n      onetwoColor = {color[0][1]}\n      onethreeColor = {color[0][2]}\n      onefourColor = {color[0][3]}\n      twooneColor = {color[1][0]}\n      twotwoColor = {color[1][1]}\n      twothreeColor = {color[1][2]}\n      twofourColor = {color[1][3]}\n      threeoneColor = {color[2][0]}\n      threetwoColor = {color[2][1]}\n      threethreeColor = {color[2][2]}\n      threefourColor = {color[2][3]}\n      fouroneColor = {color[3][0]}\n      fourtwoColor = {color[3][1]}\n      fourthreeColor = {color[3][2]}\n      fourfourColor = {color[3][3]}\n        />\n      <div>\n        <button onClick={up}>up</button>\n        <button onClick={left}>left</button>\n        <button onClick={right}>right</button>\n        <button onClick={down}>down</button>\n      </div>\n    </div>\n  );\n}\n\nfunction GameBoard(props) {\n  return (\n    <div>\n      <div className=\"GameBoard-row\">\n        <div className={`GameBoard-space ${props.oneoneColor}`}>{props.oneone}</div>\n        <div className={`GameBoard-space ${props.onetwoColor}`}>{props.onetwo}</div>\n        <div className={`GameBoard-space ${props.onethreeColor}`}>{props.onethree}</div>\n        <div className={`GameBoard-space ${props.onefourColor}`}>{props.onefour}</div>\n      </div>\n      <div className=\"GameBoard-row\">\n        <div className={`GameBoard-space ${props.twooneColor}`}>{props.twoone}</div>\n        <div className={`GameBoard-space ${props.twotwoColor}`}>{props.twotwo}</div>\n        <div className={`GameBoard-space ${props.twothreeColor}`}>{props.twothree}</div>\n        <div className={`GameBoard-space ${props.twofourColor}`}>{props.twofour}</div>\n      </div>\n      <div className=\"GameBoard-row\">\n        <div className={`GameBoard-space ${props.threeoneColor}`}>{props.threeone}</div>\n        <div className={`GameBoard-space ${props.threetwoColor}`}>{props.threetwo}</div>\n        <div className={`GameBoard-space ${props.threethreeColor}`}>{props.threethree}</div>\n        <div className={`GameBoard-space ${props.threefourColor}`}>{props.threefour}</div>\n      </div>\n      <div className=\"GameBoard-row\">\n        <div className={`GameBoard-space ${props.fouroneColor}`}>{props.fourone}</div>\n        <div className={`GameBoard-space ${props.fourtwoColor}`}>{props.fourtwo}</div>\n        <div className={`GameBoard-space ${props.fourthreeColor}`}>{props.fourthree}</div>\n        <div className={`GameBoard-space ${props.fourfourColor}`}>{props.fourfour}</div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}